{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\111\\\\Desktop\\\\\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u043E\\u0435\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\111\\\\Desktop\\\\\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u043E\\u0435\\\\src\\\\index.js\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchFetchDog),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchDogAsync);\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nvar _ReactRedux = ReactRedux,\n    Provider = _ReactRedux.Provider,\n    connect = _ReactRedux.connect;\nvar _Redux = Redux,\n    createStore = _Redux.createStore,\n    applyMiddleware = _Redux.applyMiddleware;\nvar createSagaMiddleware = ReduxSaga.default;\nvar _ReduxSaga = ReduxSaga,\n    takeEvery = _ReduxSaga.takeEvery;\nvar _ReduxSaga$effects = ReduxSaga.effects,\n    put = _ReduxSaga$effects.put,\n    call = _ReduxSaga$effects.call; // Reducer\n\nvar initialState = {\n  url: '',\n  loading: false,\n  error: false\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'REQUESTED_DOG':\n      return {\n        url: '',\n        loading: true,\n        error: false\n      };\n\n    case 'REQUESTED_DOG_SUCCEEDED':\n      return {\n        url: action.url,\n        loading: false,\n        error: false\n      };\n\n    case 'REQUESTED_DOG_FAILED':\n      return {\n        url: '',\n        loading: false,\n        error: true\n      };\n\n    default:\n      return state;\n  }\n}; // Action Creators\n\n\nvar requestDog = function requestDog() {\n  return {\n    type: 'REQUESTED_DOG'\n  };\n};\n\nvar requestDogSuccess = function requestDogSuccess(data) {\n  return {\n    type: 'REQUESTED_DOG_SUCCEEDED',\n    url: data.message\n  };\n};\n\nvar requestDogError = function requestDogError() {\n  return {\n    type: 'REQUESTED_DOG_FAILED'\n  };\n};\n\nvar fetchDog = function fetchDog() {\n  return {\n    type: 'FETCHED_DOG'\n  };\n}; // Sagas\n\n\nfunction watchFetchDog() {\n  return _regeneratorRuntime.wrap(function watchFetchDog$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery('FETCHED_DOG', fetchDogAsync);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this);\n}\n\nfunction fetchDogAsync() {\n  var data;\n  return _regeneratorRuntime.wrap(function fetchDogAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return put(requestDog());\n\n        case 3:\n          _context2.next = 5;\n          return call(function () {\n            return fetch('https://dog.ceo/api/breeds/image/random').then(function (res) {\n              return res.json();\n            });\n          });\n\n        case 5:\n          data = _context2.sent;\n          _context2.next = 8;\n          return put(requestDogSuccess(data));\n\n        case 8:\n          _context2.next = 14;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 14;\n          return put(requestDogError());\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this, [[0, 10]]);\n} // Component\n// Store\n\n\nvar sagaMiddleware = createSagaMiddleware();\nvar store = createStore(reducer, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(watchFetchDog);\nvar ConnectedApp = connect(function (state) {\n  console.log(state);\n  return state;\n})(App); // Container component\n\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96\n  },\n  __self: this\n}, React.createElement(ConnectedApp, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97\n  },\n  __self: this\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA","map":{"version":3,"sources":["C:\\Users\\111\\Desktop\\Тестовое\\src\\index.js"],"names":["watchFetchDog","fetchDogAsync","React","ReactDOM","App","ReactRedux","Provider","connect","Redux","createStore","applyMiddleware","createSagaMiddleware","ReduxSaga","default","takeEvery","effects","put","call","initialState","url","loading","error","reducer","state","action","type","requestDog","requestDogSuccess","data","message","requestDogError","fetchDog","fetch","then","res","json","sagaMiddleware","store","run","ConnectedApp","console","log","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'; \nconst {Provider, connect} = ReactRedux;\nconst {createStore, applyMiddleware} = Redux;\nconst createSagaMiddleware = ReduxSaga.default;\nconst {takeEvery} = ReduxSaga;\nconst {put, call} = ReduxSaga.effects;\n\n// Reducer\nconst initialState = {\n  url: '',\n  loading: false,\n  error: false,\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'REQUESTED_DOG':\n      return {\n        url: '',\n        loading: true,\n        error: false,\n      };\n    case 'REQUESTED_DOG_SUCCEEDED':\n      return {\n        url: action.url,\n        loading: false,\n        error: false,\n      };\n    case 'REQUESTED_DOG_FAILED':\n      return {\n        url: '',\n        loading: false,\n        error: true,\n      };\n    default:\n      return state;\n  }\n};\n\n// Action Creators\nconst requestDog = () => {\n  return { type: 'REQUESTED_DOG' }\n};\n\nconst requestDogSuccess = (data) => {\n  return { type: 'REQUESTED_DOG_SUCCEEDED', url: data.message }\n};\n\nconst requestDogError = () => {\n  return { type: 'REQUESTED_DOG_FAILED' }\n};\n\nconst fetchDog = () => {\n  return { type: 'FETCHED_DOG' }\n};\n\n// Sagas\nfunction* watchFetchDog() {\n  yield takeEvery('FETCHED_DOG', fetchDogAsync);\n}\n\nfunction* fetchDogAsync() {\n  try {\n    yield put(requestDog());\n    const data = yield call(() => {\n      return fetch('https://dog.ceo/api/breeds/image/random')\n              .then(res => res.json())\n      }\n    );\n    yield put(requestDogSuccess(data));\n  } catch (error) {\n    yield put(requestDogError());\n  }\n}\n\n// Component\n \n\n// Store\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  reducer,\n  applyMiddleware(sagaMiddleware)\n);\nsagaMiddleware.run(watchFetchDog);\n\nconst ConnectedApp = connect((state) => {\n  console.log(state);\n  return state;\n})(App);\n\n// Container component\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedApp />\n  </Provider>,\n  document.getElementById('root')\n); \n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n "]},"metadata":{},"sourceType":"module"}